#include <WiFi.h>
#include <HTTPClient.h>
#include <Update.h>

// WiFi credentials
const char* ssid = "Nodes Digital Limited";
const char* password = "NodesAgritech@2024";

// GitHub Firmware URL (raw link to the .bin file in the GitHub repository)
const char* firmwareURL = "https://raw.githubusercontent.com/username/repository/master/firmware.bin";

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  // Start OTA update
  checkForUpdate();
}

void loop() {
  // Your code to run on the ESP32
}

void checkForUpdate() {
  HTTPClient http;

  Serial.println("Checking for firmware update...");

  http.begin(firmwareURL); // Begin HTTP connection
  int httpCode = http.GET(); // Make the GET request to download the firmware

  if (httpCode == HTTP_CODE_OK) {
    int contentLength = http.getSize();
    bool canBegin = Update.begin(contentLength);

    if (canBegin) {
      Serial.println("Start updating...");

      // Download and update the firmware
      WiFiClient * client = http.getStreamPtr();
      size_t written = Update.writeStream(*client);

      if (written == contentLength) {
        Serial.println("Written: " + String(written) + " successfully");
      } else {
        Serial.println("Written only: " + String(written) + " of " + String(contentLength));
      }

      if (Update.end()) {
        Serial.println("OTA done!");
        if (Update.isFinished()) {
          Serial.println("Update successfully completed. Rebooting...");
          ESP.restart();
        } else {
          Serial.println("Update not finished. Something went wrong.");
        }
      } else {
        Serial.println("Error Occurred. Error #: " + String(Update.getError()));
      }

    } else {
      Serial.println("Not enough space to begin OTA");
    }

  } else {
    Serial.println("HTTP response not OK, code: " + String(httpCode));
  }
  
  http.end();
}
